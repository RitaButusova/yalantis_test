{"version":3,"sources":["services/service.js","components/EmployeesList/index.js","components/EmpoyeesBirthday/index.js","components/Employees/index.js","App.js","index.js"],"names":["service","axios","get","EmpoyeesList","props","activeEmployees","updateActiveEmployees","document","querySelectorAll","forEach","elt","addEventListener","e","localStorage","setItem","target","name","value","hundlerChangeValue","elSearch","selectedActiveEl","data","find","employee","id","nodeEmployee","getElementById","classList","add","remove","removeEl","indexRemoveEl","indexOf","splice","alphabet","Array","from","map","i","x","String","fromCharCode","alpha","employeesList","filter","firstName","lastName","type","defaultChecked","onChange","list","length","EmpoyeesBirthday","birthdayEmployees","sort","a","b","localeCompare","sensitivity","currentMonth","moment","month","months","item","Date","toLocaleString","slice","birthdayList","inxBirthday","dob","getMonth","Employees","useState","setData","saved","getItem","JSON","parse","setActiveEmployees","useEffect","window","stringify","checked","result","className","App","basename","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.df74ff43.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst url = 'https://yalantis-react-school-api.yalantis.com/api/task0/users';\r\n\r\nfunction service() {\r\n    return axios.get(url);\r\n}\r\n\r\nexport default service;\r\n\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default function EmpoyeesList(props) {\r\n  const { activeEmployees, updateActiveEmployees } = props;\r\n\r\n  document.querySelectorAll('input[type=\"radio\"]').forEach((elt) => {\r\n    elt.addEventListener(\"change\", (e) => {\r\n      localStorage.setItem(e.target.name, e.target.value);\r\n    });\r\n  });\r\n\r\n  const hundlerChangeValue = (e) => {\r\n    const elSearch = e.target.name;\r\n    if (e.target.value === \"true\") {\r\n      const selectedActiveEl = data.find(\r\n        (employee) => employee.id === e.target.name\r\n      );\r\n      updateActiveEmployees((activeEmployees) => [\r\n        selectedActiveEl,\r\n        ...activeEmployees,\r\n      ]);\r\n      const nodeEmployee = document.getElementById(elSearch);\r\n      nodeEmployee.classList.add(\"active\");\r\n      nodeEmployee.classList.remove(\"not_active\");\r\n    }\r\n    if (e.target.value === \"false\") {\r\n      const removeEl = activeEmployees.find(\r\n        (employee) => employee.id === e.target.name\r\n      );\r\n      const indexRemoveEl = activeEmployees.indexOf(removeEl);\r\n      updateActiveEmployees((activeEmployees) => {\r\n        activeEmployees.splice(indexRemoveEl, 1);\r\n        return activeEmployees;\r\n      });\r\n      const nodeEmployee = document.getElementById(elSearch);\r\n      nodeEmployee.classList.remove(\"active\");\r\n      nodeEmployee.classList.add(\"not_active\");\r\n    }\r\n  };\r\n\r\n  const alpha = Array.from(Array(26)).map((e, i) => i + 65);\r\n  const alphabet = alpha.map((x) => String.fromCharCode(x));\r\n  const data = props.data;\r\n\r\n  return alphabet.map((alpha) => {\r\n    const employee = data.filter((employee) => employee.firstName[0] === alpha);\r\n    const employeesList = employee.map((employee) => {\r\n      return (\r\n        <>\r\n          <li key={employee.id}>\r\n            <p id={employee.id}>\r\n              {employee.firstName} {employee.lastName}\r\n            </p>\r\n          </li>\r\n          <div>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value={false}\r\n                name={employee.id}\r\n                defaultChecked\r\n                onChange={hundlerChangeValue}\r\n              />\r\n              <span>not active</span>\r\n            </label>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                value={true}\r\n                name={employee.id}\r\n                onChange={hundlerChangeValue}\r\n              />\r\n              <span>active</span>\r\n            </label>\r\n          </div>\r\n        </>\r\n      );\r\n    });\r\n\r\n    const list =\r\n      employeesList.length > 0 ? <ul>{employeesList}</ul> : <p>No Employees</p>;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <h1>{alpha}</h1>\r\n          {list}\r\n        </div>\r\n      </>\r\n    );\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nexport default function EmpoyeesBirthday(props) {\r\n  const activeEmployees = props.activeEmployees;\r\n  const birthdayEmployees = activeEmployees.sort((a, b) =>\r\n    a.lastName.localeCompare(b.lastName, \"en\", { sensitivity: \"base\" })\r\n  );\r\n  const currentMonth = moment().month();\r\n  const months = Array.from({ length: 12 }, (item, i) => {\r\n    return new Date(0, i).toLocaleString(\"en-US\", { month: \"long\" });\r\n  });\r\n  const sortedMonths = [\r\n    ...months.slice(currentMonth),\r\n    ...months.slice(0, currentMonth),\r\n  ];\r\n\r\n  return sortedMonths.map((month) => {\r\n    const employee = birthdayEmployees.filter((employee) => {\r\n      const data = new Date(employee.dob);\r\n      const inxBirthday = data.getMonth();\r\n      return months[inxBirthday] === month;\r\n    });\r\n    const birthdayList = employee.map((employee) => {\r\n      return (\r\n        <>\r\n          <li key={employee.id}>\r\n            {employee.lastName} {employee.firstName} - {employee.dob}\r\n          </li>\r\n        </>\r\n      );\r\n    });\r\n\r\n    const list =\r\n      birthdayList.length > 0 ? <ul>{birthdayList}</ul> : <p>No Employees</p>;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <h1>{month}</h1>\r\n          {list}\r\n        </div>\r\n      </>\r\n    );\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport service from \"../../services/service\";\r\nimport EmpoyeesList from \"../EmployeesList\";\r\nimport EmpoyeesBirthday from \"../EmpoyeesBirthday\";\r\n\r\nexport default function Employees() {\r\n  const [data, setData] = useState([]);\r\n  const [activeEmployees, setActiveEmployees] = useState(() => {\r\n    const saved = localStorage.getItem(\"activeEmployees\");\r\n    const initialValue = JSON.parse(saved);\r\n    return initialValue || [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\r\n      \"activeEmployees\",\r\n      JSON.stringify(activeEmployees)\r\n    );\r\n  }, [activeEmployees]);\r\n\r\n  const updateActiveEmployees = (value) => {\r\n    setActiveEmployees(value);\r\n  };\r\n\r\n  //потрібно доробити\r\n  document.querySelectorAll('input[type=\"radio\"]').forEach((elt) => {\r\n    if (localStorage.getItem(elt.name) === \"true\") {\r\n      elt.checked = true;\r\n    } else {\r\n      elt.checked = false;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await service();\r\n      const data = result.data.sort((a, b) =>\r\n        a.firstName.localeCompare(b.firstName, \"en\", { sensitivity: \"base\" })\r\n      );\r\n      setData(data);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <EmpoyeesList\r\n        data={data}\r\n        updateActiveEmployees={updateActiveEmployees}\r\n        activeEmployees={activeEmployees}\r\n      />\r\n      {activeEmployees.length > 0 ? (\r\n        <EmpoyeesBirthday activeEmployees={activeEmployees} />\r\n      ) : (\r\n        <p>Employees List is empty</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Employees from \"./components/Employees\";\n//import { useRoutes } from 'hookrouter';\n//import routes from \"./routes\";\n\n/*function App() {\n  const routeResult = useRoutes(routes);\n  return routeResult;\n}\n\nexport default App;\n*/\n\nexport default function App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Switch>\n        <Route exact path=\"/employees\" component={Employees}></Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}